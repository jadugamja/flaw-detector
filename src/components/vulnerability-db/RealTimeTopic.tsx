"use client";

import { fetchSearchKeywords, SearchKeyword } from "@/lib/api/searchKeywords";
import { useEffect, useState } from "react";
import { Ranking } from "../ui/Ranking";

export default function RealTimeTopic() {
  const [searchKeywords, setSearchKeywords] = useState<SearchKeyword[]>([]);
  const [lastUpdatedTime, setLastUpdatedTime] = useState<string>("");

  useEffect(() => {
    let timeoutId: ReturnType<typeof setTimeout>;
    const fetchDataAndSetTimer = async () => {
      const keywords = await fetchSearchKeywords();
      setSearchKeywords(keywords);

      // 현재 시간을 업데이트 시간으로 설정
      const currentTime = new Date();
      const formattedTime = `${currentTime.getHours().toString().padStart(2, "0")}:${currentTime
        .getMinutes()
        .toString()
        .padStart(2, "0")}`;
      setLastUpdatedTime(formattedTime);

      // 정각까지 남은 시간 계산
      const minutes = currentTime.getMinutes();
      const seconds = currentTime.getSeconds();
      const millisecondsUntilNextHour = ((60 - minutes) * 60 - seconds) * 1000;

      // 정각에 fetchDataAndSetTimer를 다시 호출
      timeoutId = setTimeout(() => {
        fetchDataAndSetTimer();
      }, millisecondsUntilNextHour);
    };

    fetchDataAndSetTimer();

    return () => {
      if (timeoutId) clearTimeout(timeoutId);
    };
  }, []);

  return (
    <section className="w-[23.625rem]">
      <h2 className="mb-[17px] text-2xl font-semibold leading-[1.816rem] tracking-[-0.01em]">
        실시간 Topic
      </h2>
      <p className="mb-[1.625rem] text-lg font-medium leading-[1.361rem] tracking-[-0.01em] text-[#B7B7B7]">
        {lastUpdatedTime} 기준
      </p>
      <Ranking topSearchKeywords={searchKeywords} />
    </section>
  );
}

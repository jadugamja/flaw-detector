"use client";

import { fetchSearchKeywords, SearchKeyword } from "@/lib/api/searchKeywords";
import { useEffect, useState } from "react";
import { Ranking } from "../ui/Ranking";

export default function RealTimeTopic() {
  const [searchKeywords, setSearchKeywords] = useState<SearchKeyword[]>([]);
  const [lastUpdatedTime, setLastUpdatedTime] = useState<string>("");

  useEffect(() => {
    let timeoutId: ReturnType<typeof setTimeout>;

    const fetchDataAndSetTimer = async () => {
      try {
        const keywords = await fetchSearchKeywords();
        if (keywords.length === 0) {
          setSearchKeywords([]);
          return;
        }
        setSearchKeywords(keywords);

        // 현재 시간을 업데이트 시간으로 설정
        const currentTime = new Date();

        const month = (currentTime.getMonth() + 1).toString().padStart(2, "0");
        const date = currentTime.getDate().toString().padStart(2, "0");
        const hours = currentTime.getHours().toString().padStart(2, "0");

        const formattedTime = `${month}.${date} ${hours}:00시 기준`;
        setLastUpdatedTime(formattedTime);

        // 정각까지 남은 시간 계산
        const minutes = currentTime.getMinutes();
        const seconds = currentTime.getSeconds();
        const millisecondsUntilNextHour =
          ((60 - minutes) * 60 - seconds) * 1000;

        // 정각에 fetchDataAndSetTimer를 다시 호출
        timeoutId = setTimeout(() => {
          fetchDataAndSetTimer();
        }, millisecondsUntilNextHour);
      } catch (error) {
        console.error(error);
        setLastUpdatedTime("시간을 불러오는 데 실패했습니다.");
      }
    };

    fetchDataAndSetTimer();

    return () => {
      if (timeoutId) clearTimeout(timeoutId);
    };
  }, []);

  return (
    <section className="w-[23.625rem]">
      <h2 className="mb-[17px] text-2xl font-semibold leading-[1.816rem] tracking-[-0.01em]">
        실시간 Topic
      </h2>
      <p className="mb-[1.625rem] text-lg font-medium leading-[1.361rem] tracking-[-0.01em] text-[#B7B7B7]">
        {lastUpdatedTime}
      </p>
      <Ranking topSearchKeywords={searchKeywords} />
    </section>
  );
}

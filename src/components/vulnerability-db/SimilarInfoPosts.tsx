import {
  Card,
  CardFooter,
  CardHeader,
  CardSubTitle,
  CardTitle,
} from "@/components/ui/Card";
import { IconPin, IconShare } from "@/components/ui/Icons";
import { Label } from "@/components/ui/Label";
import { getLatestPosts } from "@/lib/api/posts";
import { formatTimestampAsDaysAgo } from "@/lib/utils";
import { VulDBPost } from "@/types/post";
import { isCertCCContentType } from "@/types/typeGuards";
import Link from "next/link";

function SimilarInfoPostCard({ post }: { post: VulDBPost }) {
  if (!post) return null;

  return (
    <Card variant="article" size="short">
      <CardHeader>
        <Label variant="new" className="mb-1">
          NEW
        </Label>
        <CardTitle weight="bold">
          {post.title?.translated || "제목이 없습니다."}
        </CardTitle>
      </CardHeader>
      {post.source === "CERT/CC" &&
        isCertCCContentType(post.content) &&
        post.content?.overview?.translated.map((item) => (
          <CardSubTitle
            size="big"
            isSingleLine
            key={item.id}
            className="block truncate"
          >
            {item.text || "내용이 없습니다."}
          </CardSubTitle>
        ))}
      {/* CNNVD 데이터가 db에 들어오면 추가 예정 */}
      <CardFooter>
        <div className="inline-flex gap-4">
          <IconPin />
          <IconShare />
        </div>
        <CardSubTitle>
          {post.created_at
            ? formatTimestampAsDaysAgo(post.created_at)
            : "작성일이 없습니다."}
        </CardSubTitle>
      </CardFooter>
    </Card>
  );
}

export default async function SimilarInfoPosts({
  currentPostId,
}: {
  currentPostId: string;
}) {
  const latestPosts = await getLatestPosts(currentPostId);

  if (latestPosts.length === 7) {
    latestPosts.pop();
  }

  return (
    <section className="w-full max-w-[82.125rem]">
      <h2 className="mb-4 text-2xl font-semibold leading-[1.816rem] tracking-[-0.01em]">
        비슷한 정보글
      </h2>
      <ul className="grid grid-cols-3 gap-9">
        {latestPosts.map((post) => {
          return (
            <li key={post.id}>
              <Link href={`/vuldb/items/${post.id}`}>
                <SimilarInfoPostCard post={post} />
              </Link>
            </li>
          );
        })}
      </ul>
    </section>
  );
}

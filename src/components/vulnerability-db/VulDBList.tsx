import {
  Card,
  CardContent,
  CardFooter,
  CardHeader,
  CardSubTitle,
  CardTitle,
} from "@/components/ui/Card";
import { IconExternalLink, IconPin } from "@/components/ui/Icons";
import { Label } from "@/components/ui/Label";
import { formatTimestampAsDaysAgo } from "@/lib/utils";
import { VulDBPostWithChip } from "@/types/post";
import { isCertCCContentType, isCnnvdContentType } from "@/types/typeGuards";
import Link from "next/link";
import { LabelSkeleton } from "./ArticleDetailHeader";

export function VulDBListCardSkeleton() {
  return (
    <Card variant="article" size="long" className="animate-pulse">
      <CardHeader className="gap-0">
        <div className="mb-3 flex items-center gap-2">
          <LabelSkeleton />
          {/* Label */}
          <div className="h-7 w-3/4 rounded bg-gray-200"></div> {/* Title */}
        </div>
        <div className="h-4 w-1/12 rounded bg-gray-200"></div> {/* Subtitle */}
      </CardHeader>
      <CardContent className="bg-gray-200" />
      <CardFooter>
        <div className="flex gap-3">
          <div className="h-7 w-7 rounded-full bg-gray-200"></div>{" "}
          {/* IconPin */}
          <div className="h-7 w-7 rounded-full bg-gray-200"></div>{" "}
          {/* IconExternalLink */}
        </div>
        <div className="h-6 w-16 rounded bg-gray-200"></div> {/* Date */}
      </CardFooter>
    </Card>
  );
}

function VulDBListCard({ post }: { post: VulDBPostWithChip }) {
  if (!post) return null;

  const daysAgo = formatTimestampAsDaysAgo(post.created_at);
  return (
    <Card variant="article" size="long">
      <CardHeader className="gap-0">
        <div className="mb-2 flex items-center gap-2">
          {post.chip === "new" && <Label variant="new">NEW</Label>}
          {post.chip === "hot" && <Label>HOT</Label>}
          <CardTitle
            size="small"
            color="black"
            className="line-clamp-1 font-normal"
          >
            {post.title?.translated ||
              post.title?.original ||
              "No Title Available"}
          </CardTitle>
        </div>
        <CardSubTitle isSingleLine className="block truncate text-line-dark">
          {post.source || "Unknown Source"}
        </CardSubTitle>
      </CardHeader>
      <CardContent className="bg-purple-light">
        <div className="block truncate">
          {post.source === "CERT/CC" &&
            isCertCCContentType(post.content) &&
            Array.isArray(post.content?.overview?.translated) &&
            post.content.overview.translated.map((item) => (
              <span key={item.id} className="text-[#797979]">
                {item.text || "No Text Available"}
              </span>
            ))}

          {post.source === "CNNVD" &&
            isCnnvdContentType(post.content) &&
            (Array.isArray(post.content?.description?.translated) ? (
              post.content.description.translated.map((item, index) => (
                <span key={index} className="text-[#797979]">
                  {item || "No Description Available"}
                </span>
              ))
            ) : (
              <span className="text-[#797979]">
                {post.content?.description?.translated ||
                  "No Description Available"}
              </span>
            ))}
        </div>
      </CardContent>
      <CardFooter>
        <div className="flex gap-3">
          <IconPin width={28} height={28} />
          <IconExternalLink />
        </div>
        <CardSubTitle color="#A2A2A2">{daysAgo || "Unknown Date"}</CardSubTitle>
      </CardFooter>
    </Card>
  );
}

export default function VulDBList({ posts }: { posts: VulDBPostWithChip[] }) {
  if (!posts || posts.length === 0) {
    return <p className="text-gray-500">데이터가 없습니다.</p>; // 임시
  }

  return (
    <ul className="flex flex-col gap-4">
      {posts.map((post: VulDBPostWithChip) => {
        return (
          <li key={post.id}>
            <Link href={`/vuldb/items/${post.id}`}>
              <VulDBListCard post={post} />
            </Link>
          </li>
        );
      })}
    </ul>
  );
}
